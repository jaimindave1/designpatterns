Design Principles :-

1. Identify the aspects that vary and encapsulate them from what stays same.
2. Program to interface, not to implementation
3. Favor composition over inheritance
4. Strive for loosely coupled desings between objects that intract.
5. Class is open for extension but closed for modification.
 
Design Patterns:-

1) Strategy Pattern  (Indexing starts with zer ;-))
	-The strategy pattern defines family of algorithms, encapsulate them and make them interchangable. Strategy let them vary independently from client that use it.
	
2) Observer Pattern
	-Observer pattern defines one to many dependency between objects, so that when one object changes state,other dependent objects gets notified and updated automatically.

3) Decorator Pattern
	-Decorator Pattern attaches additional responsibility to an objects dynamically. Decorators provides best alternative to superclassing for extending functionality.

